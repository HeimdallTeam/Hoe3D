
#include "system.h"
#include "shared.h"
#include "ref.h"
#include "shader_vertex.h"
#include "scene.h"
#include "light_system.h"

const DWORD g_vs11_main[] =
{
    0xfffe0101, 0x0000001f, 0x80000000, 0x900f0000, 0x0000001f, 0x80000003, 
    0x900f0001, 0x00000014, 0xc00f0000, 0x90e40000, 0xa0e40000, 0x00000002, 
    0x800f0000, 0xa0e4000a, 0x91e40000, 0x00000008, 0x80080000, 0x80e40000, 
    0x80e40000, 0x00000007, 0x80080000, 0x80ff0000, 0x00000005, 0x80070000, 
    0x80e40000, 0x80ff0000, 0x00000008, 0x800f0000, 0x80e40000, 0x90e40001, 
    0x0000000b, 0x800f0000, 0x80e40000, 0xa0e40005, 0x00000005, 0x800f0001, 
    0x80e40000, 0xa0e40028, 0x00000002, 0x800f0000, 0xa0e4000b, 0x91e40000, 
    0x00000008, 0x80080000, 0x80e40000, 0x80e40000, 0x00000007, 0x80080000, 
    0x80ff0000, 0x00000005, 0x80070000, 0x80e40000, 0x80ff0000, 0x00000008, 
    0x800f0000, 0x80e40000, 0x90e40001, 0x0000000b, 0x800f0000, 0x80e40000, 
    0xa0e40005, 0x00000004, 0x800f0001, 0x80e40000, 0xa0e40029, 0x80e40001, 
    0x00000002, 0x800f0000, 0xa0e4000c, 0x91e40000, 0x00000008, 0x80080000, 
    0x80e40000, 0x80e40000, 0x00000007, 0x80080000, 0x80ff0000, 0x00000005, 
    0x80070000, 0x80e40000, 0x80ff0000, 0x00000008, 0x800f0000, 0x80e40000, 
    0x90e40001, 0x0000000b, 0x800f0000, 0x80e40000, 0xa0e40005, 0x00000004, 
    0x800f0001, 0x80e40000, 0xa0e4002a, 0x80e40001, 0x00000002, 0x800f0000, 
    0xa0e4000d, 0x91e40000, 0x00000008, 0x80080000, 0x80e40000, 0x80e40000, 
    0x00000007, 0x80080000, 0x80ff0000, 0x00000005, 0x80070000, 0x80e40000, 
    0x80ff0000, 0x00000008, 0x800f0000, 0x80e40000, 0x90e40001, 0x0000000b, 
    0x800f0000, 0x80e40000, 0xa0e40005, 0x00000004, 0x800f0001, 0x80e40000, 
    0xa0e4002b, 0x80e40001, 0x00000002, 0x800f0000, 0xa0e4000e, 0x91e40000, 
    0x00000008, 0x80080000, 0x80e40000, 0x80e40000, 0x00000007, 0x80080000, 
    0x80ff0000, 0x00000005, 0x80070000, 0x80e40000, 0x80ff0000, 0x00000008, 
    0x800f0000, 0x80e40000, 0x90e40001, 0x0000000b, 0x800f0000, 0x80e40000, 
    0xa0e40005, 0x00000004, 0x800f0001, 0x80e40000, 0xa0e4002c, 0x80e40001, 
    0x00000002, 0x800f0000, 0xa0e4000f, 0x91e40000, 0x00000008, 0x80080000, 
    0x80e40000, 0x80e40000, 0x00000007, 0x80080000, 0x80ff0000, 0x00000005, 
    0x80070000, 0x80e40000, 0x80ff0000, 0x00000008, 0x800f0000, 0x80e40000, 
    0x90e40001, 0x0000000b, 0x800f0000, 0x80e40000, 0xa0e40005, 0x00000004, 
    0x800f0001, 0x80e40000, 0xa0e4002d, 0x80e40001, 0x00000002, 0x800f0000, 
    0xa0e40010, 0x91e40000, 0x00000008, 0x80080000, 0x80e40000, 0x80e40000, 
    0x00000007, 0x80080000, 0x80ff0000, 0x00000005, 0x80070000, 0x80e40000, 
    0x80ff0000, 0x00000008, 0x800f0000, 0x80e40000, 0x90e40001, 0x0000000b, 
    0x800f0000, 0x80e40000, 0xa0e40005, 0x00000004, 0x800f0001, 0x80e40000, 
    0xa0e4002e, 0x80e40001, 0x00000002, 0x800f0000, 0xa0e40011, 0x91e40000, 
    0x00000008, 0x80080000, 0x80e40000, 0x80e40000, 0x00000007, 0x80080000, 
    0x80ff0000, 0x00000005, 0x80070000, 0x80e40000, 0x80ff0000, 0x00000008, 
    0x800f0000, 0x80e40000, 0x90e40001, 0x0000000b, 0x800f0000, 0x80e40000, 
    0xa0e40005, 0x00000004, 0x800f0001, 0x80e40000, 0xa0e4002f, 0x80e40001, 
    0x00000002, 0x800f0000, 0xa0e40012, 0x91e40000, 0x00000008, 0x80080000, 
    0x80e40000, 0x80e40000, 0x00000007, 0x80080000, 0x80ff0000, 0x00000005, 
    0x80070000, 0x80e40000, 0x80ff0000, 0x00000008, 0x800f0000, 0x80e40000, 
    0x90e40001, 0x0000000b, 0x800f0000, 0x80e40000, 0xa0e40005, 0x00000004, 
    0x800f0001, 0x80e40000, 0xa0e40030, 0x80e40001, 0x00000002, 0x800f0000, 
    0xa0e40013, 0x91e40000, 0x00000008, 0x80080000, 0x80e40000, 0x80e40000, 
    0x00000007, 0x80080000, 0x80ff0000, 0x00000005, 0x80070000, 0x80e40000, 
    0x80ff0000, 0x00000008, 0x800f0000, 0x80e40000, 0x90e40001, 0x0000000b, 
    0x800f0000, 0x80e40000, 0xa0e40005, 0x00000004, 0x800f0001, 0x80e40000, 
    0xa0e40031, 0x80e40001, 0x00000002, 0x800f0000, 0xa0e40014, 0x91e40000, 
    0x00000008, 0x80080000, 0x80e40000, 0x80e40000, 0x00000007, 0x80080000, 
    0x80ff0000, 0x00000005, 0x80070000, 0x80e40000, 0x80ff0000, 0x00000008, 
    0x800f0000, 0x80e40000, 0x90e40001, 0x0000000b, 0x800f0000, 0x80e40000, 
    0xa0e40005, 0x00000004, 0x800f0001, 0x80e40000, 0xa0e40032, 0x80e40001, 
    0x00000002, 0x800f0000, 0xa0e40015, 0x91e40000, 0x00000008, 0x80080000, 
    0x80e40000, 0x80e40000, 0x00000007, 0x80080000, 0x80ff0000, 0x00000005, 
    0x80070000, 0x80e40000, 0x80ff0000, 0x00000008, 0x800f0000, 0x80e40000, 
    0x90e40001, 0x0000000b, 0x800f0000, 0x80e40000, 0xa0e40005, 0x00000004, 
    0x800f0001, 0x80e40000, 0xa0e40033, 0x80e40001, 0x00000002, 0x800f0000, 
    0xa0e40016, 0x91e40000, 0x00000008, 0x80080000, 0x80e40000, 0x80e40000, 
    0x00000007, 0x80080000, 0x80ff0000, 0x00000005, 0x80070000, 0x80e40000, 
    0x80ff0000, 0x00000008, 0x800f0000, 0x80e40000, 0x90e40001, 0x0000000b, 
    0x800f0000, 0x80e40000, 0xa0e40005, 0x00000004, 0x800f0001, 0x80e40000, 
    0xa0e40034, 0x80e40001, 0x00000002, 0x800f0000, 0xa0e40017, 0x91e40000, 
    0x00000008, 0x80080000, 0x80e40000, 0x80e40000, 0x00000007, 0x80080000, 
    0x80ff0000, 0x00000005, 0x80070000, 0x80e40000, 0x80ff0000, 0x00000008, 
    0x800f0000, 0x80e40000, 0x90e40001, 0x0000000b, 0x800f0000, 0x80e40000, 
    0xa0e40005, 0x00000004, 0x800f0001, 0x80e40000, 0xa0e40035, 0x80e40001, 
    0x00000002, 0x800f0000, 0xa0e40018, 0x91e40000, 0x00000008, 0x80080000, 
    0x80e40000, 0x80e40000, 0x00000007, 0x80080000, 0x80ff0000, 0x00000005, 
    0x80070000, 0x80e40000, 0x80ff0000, 0x00000008, 0x800f0000, 0x80e40000, 
    0x90e40001, 0x0000000b, 0x800f0000, 0x80e40000, 0xa0e40005, 0x00000004, 
    0x800f0001, 0x80e40000, 0xa0e40036, 0x80e40001, 0x00000002, 0x800f0000, 
    0xa0e40019, 0x91e40000, 0x00000008, 0x80080000, 0x80e40000, 0x80e40000, 
    0x00000007, 0x80080000, 0x80ff0000, 0x00000005, 0x80070000, 0x80e40000, 
    0x80ff0000, 0x00000008, 0x800f0000, 0x80e40000, 0x90e40001, 0x0000000b, 
    0x800f0000, 0x80e40000, 0xa0e40005, 0x00000004, 0x800f0001, 0x80e40000, 
    0xa0e40037, 0x80e40001, 0x00000002, 0x800f0000, 0xa0e4001a, 0x91e40000, 
    0x00000008, 0x80080000, 0x80e40000, 0x80e40000, 0x00000007, 0x80080000, 
    0x80ff0000, 0x00000005, 0x80070000, 0x80e40000, 0x80ff0000, 0x00000008, 
    0x800f0000, 0x80e40000, 0x90e40001, 0x0000000b, 0x800f0000, 0x80e40000, 
    0xa0e40005, 0x00000004, 0xd00f0000, 0x80e40000, 0xa0e40038, 0x80e40001, 
    0x0000ffff
};


bool HoeVertexShader::Load()
{
#ifdef _HOE_D3D9_
	HRESULT hRes = D3DDevice()->CreateVertexShader( g_vs11_main, &m_shader);
	assert(hRes == S_OK);
	return true;
#endif
	return false;
}

void HoeVertexShader::Setup(const HoeScene * scene) const
{
#ifdef _HOE_D3D9_
	HRESULT hRes = D3DDevice()->SetVertexShader( m_shader);
	assert(hRes == S_OK);

	HoeMath::MATRIX m;
	scene->GetCamera()->GetViewProjMatrix(&m);
	HoeMath::MATRIX w;
	D3DDevice()->GetTransform(D3DTS_WORLD, w);
	//HoeMath::VECTOR3 vv(0,0,0);
	//vv.Multiply(w);
	w.Multiply(m);
	w.Transpoze();

	HoeMath::VECTOR4 zero(0,0,0,0);
	D3DDevice()->SetVertexShaderConstantF(  0, (float*)w.m, 4 );		// c0-c3 contains composite transform matrix
	D3DDevice()->SetVertexShaderConstantF(  5, zero.m, 1 );	// c5   0,0,0,0

	for(uint i=0; i<17 && i < scene->GetLS()->GetNumActiveLights(); i++)
		{
			D3DDevice()->SetVertexShaderConstantF( i+10, scene->GetLS()->GetActiveLight(i)->GetPosition().m, 1 );
			D3DDevice()->SetVertexShaderConstantF( i+40, scene->GetLS()->GetActiveLight(i)->GetColor().m,  1 );
		}
#endif
}

